{
  "variables": {
    "server_ip_r": "",
    "server_ip_v": "",
    "server_domain": "",
    "server_hostname_r": "",
    "server_hostname_v": "",
    "build_base": "sys/dbab-alpine:base",
    "target_name": "sys/dbab-alpine",
    "target_version": "latest"
  },

  "builders": [
    {
      "type": "docker",
      "image": "{{user `build_base`}}",
      "pull": false,
      "export_path": "dbab-docker.tar"
    }
  ],

  "post-processors": [
    {
      "type": "docker-import",
      "repository": "{{user `target_name`}}",
      "tag": "{{user `target_version`}}",
      "changes": [
        "CMD /dbab-docker-start.sh"
      ],
      "only": [
        "docker"
      ]
    }
  ],

  "provisioners": [
    {
      "type": "file",
      "source": "dbab.apk",
      "destination": "/tmp/dbab.apk"
    },
    {
      "type": "file",
      "source": "dbab-docker-start.sh",
      "destination": "/dbab-docker-start.sh"
    },
    {
      "type": "file",
      "source": "dbab-dnsmasq.static.conf",
      "destination": "/etc/dnsmasq.d/dbab-dnsmasq.static.conf"
    },
    {
      "type": "shell",
      "environment_vars": [
        "etc_squid=/etc/squid.d",
        "server_ip_r={{user `server_ip_r`}}",
        "server_ip_v={{user `server_ip_v`}}",
        "server_domain={{user `server_domain`}}",
        "server_hostname_r={{user `server_hostname_r`}}",
        "server_hostname_v={{user `server_hostname_v`}}"
      ],
      "inline": [
        "printf '\n## Checking...\n' >&2; sleep 1; ",
        "[ ${server_hostname_r:+T} ] || { printf 'Variable server_hostname_r must be provided' >&2 && false; }",
        "[ ${server_hostname_v:+T} ] || { printf 'Variable server_hostname_v must be provided' >&2 && false; }",
        "[ ${server_domain:+T} ] || { printf 'Variable server_domain must be provided' >&2 && false; }",
        "[ ${server_ip_r:+T} ] || { printf 'Variable server_ip_r must be provided' >&2 && false; }",
        "[ ${server_ip_v:+T} ] || { printf 'Variable server_ip_v must be provided' >&2 && false; }",
        "server_gateway=`echo $server_ip_v | sed 's/\\.[^.]*$//'`",
        "cat /etc/os-release",
        "# perl -v",
        ". /etc/os-release",
        "#[ $ID = alpine ] && etc_squid=/etc/squid",
        "echo '### Customizing for' $ID, with $etc_squid",
        "",
        
        "sleep 1; printf '\n## Installing packages...\n' >&2",
        " apk add --allow-untrusted /tmp/dbab.apk",
        "# ( cd /; apk info -L dbab > /tmp/dbab.lst; ls -l `sed 1d /tmp/dbab.lst`; )",
        "sleep 1; printf '\n## Configure DNSmasq...\n' >&2",
        "# ( set -x; ls -l /usr/share/doc/dbab/dbab-dnsmasq.*.conf; )",
        "( set -x; cp -v /usr/share/doc/dbab/dbab-dnsmasq.DNS.conf /etc/dnsmasq.d; sed 's/192.168.2/'$server_gateway'/g; s/EXAMPLE.ORG/'$server_domain'/;' /usr/share/doc/dbab/dbab-dnsmasq.DHCP.conf > /etc/dnsmasq.d/dbab-dnsmasq.DHCP.conf; head -3 /etc/dnsmasq.d/dbab-dnsmasq.DHCP.conf; )",
         "( set -x; echo $server_ip_r $server_hostname_r.$server_domain $server_hostname_r | tee /etc/dnsmasq.hosts; )",

        "sleep 1; printf '\n## Configure dbab...\n' >&2",
        "echo Update ad blocking list",
        "( set -x; echo $server_ip_v | tee /etc/dbab/dbab.addr; /usr/sbin/dbab-get-list; /usr/sbin/dbab-add-list;  )",
        "echo Enable automatic WPAD service",
        "( set -x; /usr/sbin/dhcp-add-wpad; echo host-record=$server_hostname_v,$server_ip_v | tee -a /etc/dnsmasq.d/dbab-dnsmasq.static.conf; printf 'nameserver 127.0.0.1\ndomain '$server_domain'\nsearch '$server_domain'\n' > /etc/resolv.conf.good; cat /etc/resolv.conf.good > /etc/resolv.conf; )",
        "#echo Configure squid",
        "#echo 'visible_hostname '$server_hostname_v > $etc_squid/visible_hostname.conf",
        "#( set -x; cp -v /usr/share/doc/dbab/dbab-squid.*.conf $etc_squid/;  )",

        "",
        "sleep 2; printf '## Done!\n\n' >&2"
      ]
    }
  ],

  "error-cleanup-provisioner": {
    "type": "shell-local",
    "inline": [
      "echo already outside of docker container"
    ]
  }
}

